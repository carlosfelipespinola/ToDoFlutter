
import 'package:to_do_flutter/to-do/models/Task.dart';
import 'package:to_do_flutter/to-do/models/TaskDao.dart';

class TaskServices {

  void _validateTask(Task task) async {
    if (task.name == null) {
      throw Exception('A To-Do List must have a name');
    }
    if (task.toDoUid == null) {
      throw Exception('A Task must belong to a to-do list');
    }
  }

  Future<int> insertNewTask(Task task) async {
    if (task.uid != null) {
      throw Exception('When inserting a To-Do List the uid must be null');
    }
    _validateTask(task);
    return TaskDao.insert(task, autoGeneratedUid: true);
  }

  Future<int> updateExistingTask(Task task) async {
    if (task.uid == null) {
      throw Exception('Cannot update a task that does not exists');
    }
    _validateTask(task);
    return TaskDao.update(task);
  }

  Future<int> deleteTask(Task task) async {
    return TaskDao.delete(task);
  }

  Future<List<Task>> getAllTasksFromTodo(int toDoUid) async {
    return TaskDao.getAllTasksFromToDoList(toDoUid);
  }

  Future<List<Task>> getAllTasksFromToDoListBySearch(int toDoUid, String search) async {
    return TaskDao.getTasksFromToDoListBySearch(toDoUid, search);
  }

}